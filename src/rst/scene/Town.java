package rst.scene;

import java.util.Random;

import rst.Main;
import rst.assets.AssetRegistry;
import rst.character.Characters;
import rst.dialogue.DialogueStarter;
import rst.render.Block;
import rst.render.CameraFollowable;
import rst.render.HittableBlock;
import rst.render.InteractableBlock;
import rst.render.SceneRenderable;

public class Town extends Scene{

	public Town() {	super("sand", 60, 40, AssetRegistry.getSounds().get("town"),
					(CameraFollowable) Characters.getCharacters().getCharacter("Connor Adams"), "Town", Characters.getCharacters().getCharacter("Connor Adams"),
					//Paths
					new Block("path" , -20, 19),
					new Block("path" , -20, 20),
					new Block("path" , -20, 21),
					new Block("path" , -19, 19),
					new Block("path" , -19, 20),
					new Block("path" , -19, 21),
					new Block("path" , -18, 19),
					new Block("path" , -18, 20),
					new Block("path" , -18, 21),
					new Block("path" , -17, 19),
					new Block("path" , -17, 20),
					new Block("path" , -17, 21),
					new Block("path" , -16, 19),
					new Block("path" , -16, 20),
					new Block("path" , -16, 21),
					new Block("path" , -15, 19),
					new Block("path" , -15, 20),
					new Block("path" , -15, 21),
					new Block("path" , -14, 19),
					new Block("path" , -14, 20),
					new Block("path" , -14, 21),
					new Block("path" , -13, 19),
					new Block("path" , -13, 20),
					new Block("path" , -13, 21),
					new Block("path" , -12, 19),
					new Block("path" , -12, 20),
					new Block("path" , -12, 21),
					new Block("path" , -11, 19),
					new Block("path" , -11, 20),
					new Block("path" , -11, 21),
					new Block("path" , -10, 19),
					new Block("path" , -10, 20),
					new Block("path" , -10, 21),
					new Block("path" , -9, 19),
					new Block("path" , -9, 20),
					new Block("path" , -9, 21),
					new Block("path" , -8, 19),
					new Block("path" , -8, 20),
					new Block("path" , -8, 21),
					new Block("path" , -7, 19),
					new Block("path" , -7, 20),
					new Block("path" , -7, 21),
					new Block("path" , -6, 19),
					new Block("path" , -6, 20),
					new Block("path" , -6, 21),
					new Block("path" , -5, 19),
					new Block("path" , -5, 20),
					new Block("path" , -5, 21),
					new Block("path" , -4, 19),
					new Block("path" , -4, 20),
					new Block("path" , -4, 21),
					new Block("path" , -3, 19),
					new Block("path" , -3, 20),
					new Block("path" , -3, 21),
					new Block("path" , -2, 19),
					new Block("path" , -2, 20),
					new Block("path" , -2, 21),
					new Block("path" , -1, 19),
					new Block("path" , -1, 20),
					new Block("path" , -1, 21),
					new Block("path" , 0, 19),
					new Block("path" , 0, 20),
					new Block("path" , 0, 21),
					new Block("path" , 1, 19),
					new Block("path" , 1, 20),
					new Block("path" , 1, 21),
					new Block("path" , 2, 19),
					new Block("path" , 2, 20),
					new Block("path" , 2, 21),
					new Block("path" , 3, 19),
					new Block("path" , 3, 20),
					new Block("path" , 3, 21),
					new Block("path" , 4, 19),
					new Block("path" , 4, 20),
					new Block("path" , 4, 21),
					new Block("path" , 5, 19),
					new Block("path" , 5, 20),
					new Block("path" , 5, 21),
					new Block("path" , 6, 19),
					new Block("path" , 6, 20),
					new Block("path" , 6, 21),
					new Block("path" , 7, 19),
					new Block("path" , 7, 20),
					new Block("path" , 7, 21),
					new Block("path" , 8, 19),
					new Block("path" , 8, 20),
					new Block("path" , 8, 21),
					new Block("path" , 9, 19),
					new Block("path" , 9, 20),
					new Block("path" , 9, 21),
					new Block("path" , 10, 19),
					new Block("path" , 10, 20),
					new Block("path" , 10, 21),
					new Block("path" , 11, 19),
					new Block("path" , 11, 20),
					new Block("path" , 11, 21),
					new Block("path" , 12, 19),
					new Block("path" , 12, 20),
					new Block("path" , 12, 21),
					new Block("path" , 13, 19),
					new Block("path" , 13, 20),
					new Block("path" , 13, 21),
					new Block("path" , 14, 19),
					new Block("path" , 14, 20),
					new Block("path" , 14, 21),
					new Block("path" , 15, 19),
					new Block("path" , 15, 20),
					new Block("path" , 15, 21),
					new Block("path" , 16, 19),
					new Block("path" , 16, 20),
					new Block("path" , 16, 21),
					new Block("path" , 17, 19),
					new Block("path" , 17, 20),
					new Block("path" , 17, 21),
					new Block("path" , 18, 19),
					new Block("path" , 18, 20),
					new Block("path" , 18, 21),
					new Block("path" , 19, 19),
					new Block("path" , 19, 20),
					new Block("path" , 19, 21),
					new Block("path" , 20, 19),
					new Block("path" , 20, 20),
					new Block("path" , 20, 21),
					new Block("path" , 21, 19),
					new Block("path" , 21, 20),
					new Block("path" , 21, 21),
					new Block("path" , 22, 19),
					new Block("path" , 22, 20),
					new Block("path" , 22, 21),
					new Block("path" , 23, 19),
					new Block("path" , 23, 20),
					new Block("path" , 23, 21),
					new Block("path" , 24, 19),
					new Block("path" , 24, 20),
					new Block("path" , 24, 21),
					new Block("path" , 25, 19),
					new Block("path" , 25, 20),
					new Block("path" , 25, 21),
					new Block("path" , 26, 19),
					new Block("path" , 26, 20),
					new Block("path" , 26, 21),
					new Block("path" , 27, 19),
					new Block("path" , 27, 20),
					new Block("path" , 27, 21),
					new Block("path" , 28, 19),
					new Block("path" , 28, 20),
					new Block("path" , 28, 21),
					new Block("path" , 29, 19),
					new Block("path" , 29, 20),
					new Block("path" , 29, 21),
					new Block("path" , 30, 19),
					new Block("path" , 30, 20),
					new Block("path" , 30, 21),
					new Block("path" , 31, 19),
					new Block("path" , 31, 20),
					new Block("path" , 31, 21),
					new Block("path" , 32, 19),
					new Block("path" , 32, 20),
					new Block("path" , 32, 21),
					new Block("path" , 33, 19),
					new Block("path" , 33, 20),
					new Block("path" , 33, 21),
					new Block("path" , 34, 19),
					new Block("path" , 34, 20),
					new Block("path" , 34, 21),
					new Block("path" , 35, 19),
					new Block("path" , 35, 20),
					new Block("path" , 35, 21),
					new Block("path" , 36, 19),
					new Block("path" , 36, 20),
					new Block("path" , 36, 21),
					new Block("path" , 37, 19),
					new Block("path" , 37, 20),
					new Block("path" , 37, 21),
					new Block("path" , 38, 19),
					new Block("path" , 38, 20),
					new Block("path" , 38, 21),
					new Block("path" , 39, 19),
					new Block("path" , 39, 20),
					new Block("path" , 39, 21),
					new Block("path" , 40, 19),
					new Block("path" , 40, 20),
					new Block("path" , 40, 21),
					new Block("path" , 41, 19),
					new Block("path" , 41, 20),
					new Block("path" , 41, 21),
					new Block("path" , 42, 19),
					new Block("path" , 42, 20),
					new Block("path" , 42, 21),
					new Block("path" , 43, 19),
					new Block("path" , 43, 20),
					new Block("path" , 43, 21),
					new Block("path" , 44, 19),
					new Block("path" , 44, 20),
					new Block("path" , 44, 21),
					new Block("path" , 45, 19),
					new Block("path" , 45, 20),
					new Block("path" , 45, 21),
					new Block("path" , 46, 19),
					new Block("path" , 46, 20),
					new Block("path" , 46, 21),
					new Block("path" , 47, 19),
					new Block("path" , 47, 20),
					new Block("path" , 47, 21),
					new Block("path" , 48, 19),
					new Block("path" , 48, 20),
					new Block("path" , 48, 21),
					new Block("path" , 49, 19),
					new Block("path" , 49, 20),
					new Block("path" , 49, 21),
					new Block("path" , 50, 19),
					new Block("path" , 50, 20),
					new Block("path" , 50, 21),
					new Block("path" , 51, 19),
					new Block("path" , 51, 20),
					new Block("path" , 51, 21),
					new Block("path" , 52, 19),
					new Block("path" , 52, 20),
					new Block("path" , 52, 21),
					new Block("path" , 53, 19),
					new Block("path" , 53, 20),
					new Block("path" , 53, 21),
					new Block("path" , 54, 19),
					new Block("path" , 54, 20),
					new Block("path" , 54, 21),
					new Block("path" , 55, 19),
					new Block("path" , 55, 20),
					new Block("path" , 55, 21),
					new Block("path" , 56, 19),
					new Block("path" , 56, 20),
					new Block("path" , 56, 21),
					new Block("path" , 57, 19),
					new Block("path" , 57, 20),
					new Block("path" , 57, 21),
					new Block("path" , 58, 19),
					new Block("path" , 58, 20),
					new Block("path" , 58, 21),
					new Block("path" , 59, 19),
					new Block("path" , 59, 20),
					new Block("path" , 59, 21),
					new Block("path" , 60, 19),
					new Block("path" , 60, 20),
					new Block("path" , 60, 21),
					new Block("path" , 61, 19),
					new Block("path" , 61, 20),
					new Block("path" , 61, 21),
					new Block("path" , 62, 19),
					new Block("path" , 62, 20),
					new Block("path" , 62, 21),
					new Block("path" , 63, 19),
					new Block("path" , 63, 20),
					new Block("path" , 63, 21),
					new Block("path" , 64, 19),
					new Block("path" , 64, 20),
					new Block("path" , 64, 21),
					new Block("path" , 65, 19),
					new Block("path" , 65, 20),
					new Block("path" , 65, 21),
					new Block("path" , 66, 19),
					new Block("path" , 66, 20),
					new Block("path" , 66, 21),
					new Block("path" , 67, 19),
					new Block("path" , 67, 20),
					new Block("path" , 67, 21),
					new Block("path" , 68, 19),
					new Block("path" , 68, 20),
					new Block("path" , 68, 21),
					new Block("path" , 69, 19),
					new Block("path" , 69, 20),
					new Block("path" , 69, 21),
					new Block("path" , 70, 19),
					new Block("path" , 70, 20),
					new Block("path" , 70, 21),
					new Block("path" , 71, 19),
					new Block("path" , 71, 20),
					new Block("path" , 71, 21),
					new Block("path" , 72, 19),
					new Block("path" , 72, 20),
					new Block("path" , 72, 21),
					new Block("path" , 73, 19),
					new Block("path" , 73, 20),
					new Block("path" , 73, 21),
					new Block("path" , 74, 19),
					new Block("path" , 74, 20),
					new Block("path" , 74, 21),
					new Block("path" , 75, 19),
					new Block("path" , 75, 20),
					new Block("path" , 75, 21),
					new Block("path" , 76, 19),
					new Block("path" , 76, 20),
					new Block("path" , 76, 21),
					new Block("path" , 77, 19),
					new Block("path" , 77, 20),
					new Block("path" , 77, 21),
					new Block("path" , 78, 19),
					new Block("path" , 78, 20),
					new Block("path" , 78, 21),
					new Block("path" , 79, 19),
					new Block("path" , 79, 20),
					new Block("path" , 79, 21),

					// path 1
					new Block ("path", 6 + 7, 11 + 11),
					new Block ("path", 9+ 7, 11+ 11),
					new Block ("path", 10+ 7, 11+ 11),
					new Block ("path", 9+ 7, 12+ 11),
					new Block ("path", 7+ 7, 11+ 11),
					new Block ("path", 8+ 7, 11+ 11),
					new Block ("path", 7+ 7, 12+ 11),
					new Block ("path", 8+ 7, 12 + 11),
					new Block ("path", 7+ 7, 13+ 11),
					new Block ("path", 8+ 7, 13+ 11),
					new Block ("path", 7+ 7, 14+ 11),
					new Block ("path", 8+ 7, 14+ 11),
					new Block ("path", 7+ 7, 15+ 11),
					new Block ("path", 8+ 7, 15+ 11),
					new Block ("path", 7+ 7, 16+ 11),
					new Block ("path", 8+ 7, 16+ 11),
					new Block ("path", 7+ 7, 17+ 11),
					new Block ("path", 8+ 7, 17+ 11),
					new Block ("path", 7+ 7, 18+ 11),
					new Block ("path", 8+ 7, 18+ 11),
					new Block ("path", 7+ 7, 19+ 11),
					new Block ("path", 8+ 7, 19+ 11),
					
					//Path 2
					new Block ("path", 25 + 7, 7 + 11),
					new Block ("path", 25+ 7, 6 + 11),
					new Block ("path", 25+ 7, 5 + 11),
					new Block ("path", 24+ 7, 7 + 11),
					new Block ("path", 28+ 7, 7 + 11),
					
					
					new Block ("path", 26+ 7, 7 + 11),
					new Block ("path", 27+ 7, 7+ 11),
					new Block ("path", 26+ 7, 6+ 11),
					new Block ("path", 27+ 7, 6+ 11),
					new Block ("path", 26+ 7, 5+ 11),
					new Block ("path", 27+ 7, 5+ 11),
					new Block ("path", 26+ 7, 4+ 11),
					new Block ("path", 27+ 7, 4+ 11),
					new Block ("path", 26+ 7, 3+ 11),
					new Block ("path", 27+ 7, 3+ 11),
					new Block ("path", 26+ 7, 2+ 11),
					new Block ("path", 27+ 7, 2+ 11),
					new Block ("path", 26+ 7, 1+ 11),
					new Block ("path", 27+ 7, 1+ 11),
					new Block ("path", 26+ 7, 0+ 11),
					new Block ("path", 27+ 7, 0+ 11),
					
					//fences
					
					//Top row
					new Block("fenceVertical" , 0, -1),
					new Block("fenceVertical" , 1, -1),
					new Block("fenceVertical" , 2, -1),
					new Block("fenceVertical" , 3, -1),
					new Block("fenceVertical" , 4, -1),
					new Block("fenceVertical" , 5, -1),
					new Block("fenceVertical" , 6, -1),
					new Block("fenceVertical" , 7, -1),
					new Block("fenceVertical" , 8, -1),
					new Block("fenceVertical" , 9, -1),
					new Block("fenceVertical" , 10, -1),
					new Block("fenceVertical" , 11, -1),
					new Block("fenceVertical" , 12, -1),
					new Block("fenceVertical" , 13, -1),
					new Block("fenceVertical" , 14, -1),
					new Block("fenceVertical" , 15, -1),
					new Block("fenceVertical" , 16, -1),
					new Block("fenceVertical" , 17, -1),
					new Block("fenceVertical" , 18, -1),
					new Block("fenceVertical" , 19, -1),
					new Block("fenceVertical" , 20, -1),
					new Block("fenceVertical" , 21, -1),
					new Block("fenceVertical" , 22, -1),
					new Block("fenceVertical" , 23, -1),
					new Block("fenceVertical" , 24, -1),
					new Block("fenceVertical" , 25, -1),
					new Block("fenceVertical" , 26, -1),
					new Block("fenceVertical" , 27, -1),
					new Block("fenceVertical" , 28, -1),
					new Block("fenceVertical" , 29, -1),
					new Block("fenceVertical" , 30, -1),
					new Block("fenceVertical" , 31, -1),
					new Block("fenceVertical" , 32, -1),
					new Block("fenceVertical" , 33, -1),
					new Block("fenceVertical" , 34, -1),
					new Block("fenceVertical" , 35, -1),
					new Block("fenceVertical" , 36, -1),
					new Block("fenceVertical" , 37, -1),
					new Block("fenceVertical" , 38, -1),
					new Block("fenceVertical" , 39, -1),
					new Block("fenceVertical" , 40, -1),
					new Block("fenceVertical" , 41, -1),
					new Block("fenceVertical" , 42, -1),
					new Block("fenceVertical" , 43, -1),
					new Block("fenceVertical" , 44, -1),
					new Block("fenceVertical" , 45, -1),
					new Block("fenceVertical" , 46, -1),
					new Block("fenceVertical" , 47, -1),
					new Block("fenceVertical" , 48, -1),
					new Block("fenceVertical" , 49, -1),
					new Block("fenceVertical" , 50, -1),
					new Block("fenceVertical" , 51, -1),
					new Block("fenceVertical" , 52, -1),
					new Block("fenceVertical" , 53, -1),
					new Block("fenceVertical" , 54, -1),
					new Block("fenceVertical" , 55, -1),
					new Block("fenceVertical" , 56, -1),
					new Block("fenceVertical" , 57, -1),
					new Block("fenceVertical" , 58, -1),
					new Block("fenceVertical" , 59, -1),
					
					//Bottom row
					new Block("fenceVertical" , 0, 40),
					new Block("fenceVertical" , 1, 40),
					new Block("fenceVertical" , 2, 40),
					new Block("fenceVertical" , 3, 40),
					new Block("fenceVertical" , 4, 40),
					new Block("fenceVertical" , 5, 40),
					new Block("fenceVertical" , 6, 40),
					new Block("fenceVertical" , 7, 40),
					new Block("fenceVertical" , 8, 40),
					new Block("fenceVertical" , 9, 40),
					new Block("fenceVertical" , 10, 40),
					new Block("fenceVertical" , 11, 40),
					new Block("fenceVertical" , 12, 40),
					new Block("fenceVertical" , 13, 40),
					new Block("fenceVertical" , 14, 40),
					new Block("fenceVertical" , 15, 40),
					new Block("fenceVertical" , 16, 40),
					new Block("fenceVertical" , 17, 40),
					new Block("fenceVertical" , 18, 40),
					new Block("fenceVertical" , 19, 40),
					new Block("fenceVertical" , 20, 40),
					new Block("fenceVertical" , 21, 40),
					new Block("fenceVertical" , 22, 40),
					new Block("fenceVertical" , 23, 40),
					new Block("fenceVertical" , 24, 40),
					new Block("fenceVertical" , 25, 40),
					new Block("fenceVertical" , 26, 40),
					new Block("fenceVertical" , 27, 40),
					new Block("fenceVertical" , 28, 40),
					new Block("fenceVertical" , 29, 40),
					new Block("fenceVertical" , 30, 40),
					new Block("fenceVertical" , 31, 40),
					new Block("fenceVertical" , 32, 40),
					new Block("fenceVertical" , 33, 40),
					new Block("fenceVertical" , 34, 40),
					new Block("fenceVertical" , 35, 40),
					new Block("fenceVertical" , 36, 40),
					new Block("fenceVertical" , 37, 40),
					new Block("fenceVertical" , 38, 40),
					new Block("fenceVertical" , 39, 40),
					new Block("fenceVertical" , 40, 40),
					new Block("fenceVertical" , 41, 40),
					new Block("fenceVertical" , 42, 40),
					new Block("fenceVertical" , 43, 40),
					new Block("fenceVertical" , 44, 40),
					new Block("fenceVertical" , 45, 40),
					new Block("fenceVertical" , 46, 40),
					new Block("fenceVertical" , 47, 40),
					new Block("fenceVertical" , 48, 40),
					new Block("fenceVertical" , 49, 40),
					new Block("fenceVertical" , 50, 40),
					new Block("fenceVertical" , 51, 40),
					new Block("fenceVertical" , 52, 40),
					new Block("fenceVertical" , 53, 40),
					new Block("fenceVertical" , 54, 40),
					new Block("fenceVertical" , 55, 40),
					new Block("fenceVertical" , 56, 40),
					new Block("fenceVertical" , 57, 40),
					new Block("fenceVertical" , 58, 40),
					new Block("fenceVertical" , 59, 40),
					
					//Left columnb
					new Block("fenceHorizontalLeft" , -1, -1),
					new Block("fenceHorizontalLeft" , -1, 0),
					new Block("fenceHorizontalLeft" , -1, 1),
					new Block("fenceHorizontalLeft" , -1, 2),
					new Block("fenceHorizontalLeft" , -1, 3),
					new Block("fenceHorizontalLeft" , -1, 4),
					new Block("fenceHorizontalLeft" , -1, 5),
					new Block("fenceHorizontalLeft" , -1, 6),
					new Block("fenceHorizontalLeft" , -1, 7),
					new Block("fenceHorizontalLeft" , -1, 8),
					new Block("fenceHorizontalLeft" , -1, 9),
					new Block("fenceHorizontalLeft" , -1, 10),
					new Block("fenceHorizontalLeft" , -1, 11),
					new Block("fenceHorizontalLeft" , -1, 12),
					new Block("fenceHorizontalLeft" , -1, 13),
					new Block("fenceHorizontalLeft" , -1, 14),
					new Block("fenceHorizontalLeft" , -1, 15),
					new Block("fenceHorizontalLeft" , -1, 16),
					new Block("fenceHorizontalLeft" , -1, 17),
					new Block("fenceHorizontalLeft" , -1, 18),
					new Block("fenceHorizontalLeft" , -1, 19),
					new Block("fenceHorizontalLeft" , -1, 20),
					new Block("fenceHorizontalLeft" , -1, 21),
					new Block("fenceHorizontalLeft" , -1, 22),
					new Block("fenceHorizontalLeft" , -1, 23),
					new Block("fenceHorizontalLeft" , -1, 24),
					new Block("fenceHorizontalLeft" , -1, 25),
					new Block("fenceHorizontalLeft" , -1, 26),
					new Block("fenceHorizontalLeft" , -1, 27),
					new Block("fenceHorizontalLeft" , -1, 28),
					new Block("fenceHorizontalLeft" , -1, 29),
					new Block("fenceHorizontalLeft" , -1, 30),
					new Block("fenceHorizontalLeft" , -1, 31),
					new Block("fenceHorizontalLeft" , -1, 32),
					new Block("fenceHorizontalLeft" , -1, 33),
					new Block("fenceHorizontalLeft" , -1, 34),
					new Block("fenceHorizontalLeft" , -1, 35),
					new Block("fenceHorizontalLeft" , -1, 36),
					new Block("fenceHorizontalLeft" , -1, 37),
					new Block("fenceHorizontalLeft" , -1, 38),
					new Block("fenceHorizontalLeft" , -1, 39),
					new Block("fenceHorizontalLeft" , -1, 40),
					
					//Right column
					new Block("fenceHorizontalRight" , 60, -1),
					new Block("fenceHorizontalRight" , 60, 0),
					new Block("fenceHorizontalRight" , 60, 1),
					new Block("fenceHorizontalRight" , 60, 2),
					new Block("fenceHorizontalRight" , 60, 3),
					new Block("fenceHorizontalRight" , 60, 4),
					new Block("fenceHorizontalRight" , 60, 5),
					new Block("fenceHorizontalRight" , 60, 6),
					new Block("fenceHorizontalRight" , 60, 7),
					new Block("fenceHorizontalRight" , 60, 8),
					new Block("fenceHorizontalRight" , 60, 9),
					new Block("fenceHorizontalRight" , 60, 10),
					new Block("fenceHorizontalRight" , 60, 11),
					new Block("fenceHorizontalRight" , 60, 12),
					new Block("fenceHorizontalRight" , 60, 13),
					new Block("fenceHorizontalRight" , 60, 14),
					new Block("fenceHorizontalRight" , 60, 15),
					new Block("fenceHorizontalRight" , 60, 16),
					new Block("fenceHorizontalRight" , 60, 17),
					new Block("fenceHorizontalRight" , 60, 18),
					new Block("fenceHorizontalRight" , 60, 19),
					new Block("fenceHorizontalRight" , 60, 20),
					new Block("fenceHorizontalRight" , 60, 21),
					new Block("fenceHorizontalRight" , 60, 22),
					new Block("fenceHorizontalRight" , 60, 23),
					new Block("fenceHorizontalRight" , 60, 24),
					new Block("fenceHorizontalRight" , 60, 25),
					new Block("fenceHorizontalRight" , 60, 26),
					new Block("fenceHorizontalRight" , 60, 27),
					new Block("fenceHorizontalRight" , 60, 28),
					new Block("fenceHorizontalRight" , 60, 29),
					new Block("fenceHorizontalRight" , 60, 30),
					new Block("fenceHorizontalRight" , 60, 31),
					new Block("fenceHorizontalRight" , 60, 32),
					new Block("fenceHorizontalRight" , 60, 33),
					new Block("fenceHorizontalRight" , 60, 34),
					new Block("fenceHorizontalRight" , 60, 35),
					new Block("fenceHorizontalRight" , 60, 36),
					new Block("fenceHorizontalRight" , 60, 37),
					new Block("fenceHorizontalRight" , 60, 38),
					new Block("fenceHorizontalRight" , 60, 39),
					new Block("fenceHorizontalRight" , 60, 40),

					
					//Cacti
//					new InteractableBlock(Block.GRID_SIZE * 60, Block.GRID_SIZE * 40, "cactus2", 5, 6).onInteract(new DialogueStarter("plotTest")),
//					new DoubleCactus(Block.GRID_SIZE * 60, Block.GRID_SIZE * 40, 1, 5),
//					new DoubleCactus(Block.GRID_SIZE * 60, Block.GRID_SIZE * 40, 10, 14),
//					new DoubleCactus(Block.GRID_SIZE * 60, Block.GRID_SIZE * 40, 14, 15),
//					new DoubleCactus(Block.GRID_SIZE * 60, Block.GRID_SIZE * 40, 19, 18),
//					new HittableBlock(Block.GRID_SIZE * 60, Block.GRID_SIZE * 40, "cactus2", 13, 11 ),
//					
					//Rails
					new Block("railroad" , 50, -20),
					new Block("railroad" , 50, -19),
					new Block("railroad" , 50, -18),
					new Block("railroad" , 50, -17),
					new Block("railroad" , 50, -16),
					new Block("railroad" , 50, -15),
					new Block("railroad" , 50, -14),
					new Block("railroad" , 50, -13),
					new Block("railroad" , 50, -12),
					new Block("railroad" , 50, -11),
					new Block("railroad" , 50, -10),
					new Block("railroad" , 50, -9),
					new Block("railroad" , 50, -8),
					new Block("railroad" , 50, -7),
					new Block("railroad" , 50, -6),
					new Block("railroad" , 50, -5),
					new Block("railroad" , 50, -4),
					new Block("railroad" , 50, -3),
					new Block("railroad" , 50, -2),
					new Block("railroad" , 50, -1),
					new Block("railroad" , 50, 0),
					new Block("railroad" , 50, 1),
					new Block("railroad" , 50, 2),
					new Block("railroad" , 50, 3),
					new Block("railroad" , 50, 4),
					new Block("railroad" , 50, 5),
					new Block("railroad" , 50, 6),
					new Block("railroad" , 50, 7),
					new Block("railroad" , 50, 8),
					new Block("railroad" , 50, 9),
					new Block("railroad" , 50, 10),
					new Block("railroad" , 50, 11),
					new Block("railroad" , 50, 12),
					new Block("railroad" , 50, 13),
					new Block("railroad" , 50, 14),
					new Block("railroad" , 50, 15),
					new Block("railroad" , 50, 16),
					new Block("railroad" , 50, 17),
					new Block("railroad" , 50, 18),
					new Block("railroad" , 50, 19),
					new Block("railroad" , 50, 20),
					new Block("railroad" , 50, 21),
					new Block("railroad" , 50, 22),
					new Block("railroad" , 50, 23),
					new Block("railroad" , 50, 24),
					new Block("railroad" , 50, 25),
					new Block("railroad" , 50, 26),
					new Block("railroad" , 50, 27),
					new Block("railroad" , 50, 28),
					new Block("railroad" , 50, 29),
					new Block("railroad" , 50, 30),
					new Block("railroad" , 50, 31),
					new Block("railroad" , 50, 32),
					new Block("railroad" , 50, 33),
					new Block("railroad" , 50, 34),
					new Block("railroad" , 50, 35),
					new Block("railroad" , 50, 36),
					new Block("railroad" , 50, 37),
					new Block("railroad" , 50, 38),
					new Block("railroad" , 50, 39),
					new Block("railroad" , 50, 40),
					new Block("railroad" , 50, 41),
					new Block("railroad" , 50, 42),
					new Block("railroad" , 50, 43),
					new Block("railroad" , 50, 44),
					new Block("railroad" , 50, 45),
					new Block("railroad" , 50, 46),
					new Block("railroad" , 50, 47),
					new Block("railroad" , 50, 48),
					new Block("railroad" , 50, 49),
					new Block("railroad" , 50, 50),
					new Block("railroad" , 50, 51),
					new Block("railroad" , 50, 52),
					new Block("railroad" , 50, 53),
					new Block("railroad" , 50, 54),
					new Block("railroad" , 50, 55),
					new Block("railroad" , 50, 56),
					new Block("railroad" , 50, 57),
					new Block("railroad" , 50, 58),
					new Block("railroad" , 50, 59),
					new Block("railroad" , 50, 60),
					
					//Portals
					new ScenePortal(Block.GRID_SIZE * 60, Block.GRID_SIZE * 40, "greenArrowUp", 20, 20, "Saloon", 4, 4)

);
	
					

	}

	public void editTerrain() {
		final long seed = 4598653583816203960L;
		
		int w = getWidth() / Block.GRID_SIZE;
		int h = getHeight() / Block.GRID_SIZE;
		
		int num_cactus = (int) (0.125 * (w + 40) * (h + 40));
		
		Random random = new Random(seed);
		
		boolean[][] taken = new boolean[w + 40][h + 40]; 
		
		for(SceneRenderable item : this.getSceneRenderables()) {
			if(item instanceof Block) {
				Block block = (Block)item;
				if(!block.getTexture().getName().equals("sand") && -20 <= block.getX() && block.getX() < w + 20 && -20 <= block.getY() && block.getY() < h + 20) {
					taken[block.getX() + 20][block.getY() + 20] = true;
				}
			}
		}
		
		for(int i = 0; i < num_cactus; i++) {
			int x, y;
			do {
				x = random.nextInt(w + 40) - 20;
				y = random.nextInt(h + 40) - 20;
			} while(taken[x + 20][y + 20] || taken[x + 20][Math.min(h + 19, y + 21)]);
			
			taken[x + 20][y + 20] = true;
			int type = random.nextInt(5);
			
			
			Block block;
			switch(type) {
			case 0:
				if(y != h + 19) {
					taken[x + 20][y + 21] = true; 
				}
				block = new DoubleCactus(getWidth(), getHeight(), x, y);
				break;
			case 1:
				block = new HittableBlock(getWidth(), getHeight(), "cactus2", x, y);
				break;
			case 2:
				block = new HittableBlock(getWidth(), getHeight(), "bush1", x, y);
				break;
			case 3:
				block = new HittableBlock(getWidth(), getHeight(), "bush2", x, y);
				break;
			case 4:
				block = new HittableBlock(getWidth(), getHeight(), "bush3", x, y);
				break;
				default: throw new IllegalStateException("Number should be 0..4");
			}
			
			addItem(block);
		}
	}
}
